# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Argument {
  command: Command!
  id: ID!
  multi: Boolean
  name: String!
  optional: Boolean
}

type Command {
  aliases: [String!]
  args: [Argument!]
  category: CommandCategory!
  description: String!
  id: ID!
  name: String!
}

enum CommandCategory {
  CURRENCY
  FUN
  GAMES
  MUSIC
  UTILITY
}

input CreateArgumentInput {
  multi: Boolean
  name: String!
  optional: Boolean
}

input CreateCommandInput {
  aliases: [String!]
  args: [CreateArgumentInput!]
  category: CommandCategory!
  description: String!
  name: String!
}

input CreateGuildInput {
  customPrefix: String

  """The commands to disable in this server."""
  disabledCommands: [String!]
  id: String!
}

input CreateUserInput {
  """The user's Discord ID."""
  id: String!
  ribbons: Int!

  """Discord tag, e.g., doraemon#4200"""
  tag: String!
}

input DecrRibbonInput {
  decrement: Int!

  """The user's Discord ID."""
  id: String!

  """Discord tag, e.g., doraemon#4200"""
  tag: String!
}

enum FindUserSortFields {
  ribbons
}

input FindUserSortOptions {
  by: FindUserSortFields!
  in: SortDirection!
}

input FindUsersInput {
  sort: FindUserSortOptions
  take: Int
}

type Guild {
  customPrefix: String

  """Array of commands disabled in this server."""
  disabledCommands: [Command!]
  id: String!
}

input IncrRibbonInput {
  """The user's Discord ID."""
  id: String!
  increment: Int!

  """Discord tag, e.g., doraemon#4200"""
  tag: String!
}

type Mutation {
  """Creates one to many commands."""
  createCommands(commands: [CreateCommandInput!]!): [Command!]!
  createGuild(createGuildInput: CreateGuildInput!): Guild!
  createUser(createUserInput: CreateUserInput!): User!
  decrRibbon(decrRibbonInput: DecrRibbonInput!): User!
  deleteGuild(id: String!): Guild!
  deleteUser(id: String!): User!
  disableCommands(commands: [String!]!, id: String!): Guild!
  dropAllCommands: Int
  enableCommands(commands: [String!]!, id: String!): Guild!
  incrRibbon(incrRibbonInput: IncrRibbonInput!): User!
  seedCommands(commands: [CreateCommandInput!]!): Int
  updateGuild(updateGuildInput: UpdateGuildInput!): Guild!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Query {
  findCommand(name: String!): Command!
  findCommands: [Command!]!
  findGuild(id: String!): Guild!
  findGuilds: [Guild!]!
  findUser(id: String!): User
  findUsers(findUsersInput: FindUsersInput): [User!]!
}

"""Option to sort response in descending or ascending order."""
enum SortDirection {
  ASC
  DESC
}

input UpdateGuildInput {
  customPrefix: String

  """The commands to disable in this server."""
  disabledCommands: [String!]
  id: String!
}

input UpdateUserInput {
  """The user's Discord ID."""
  id: String!
  ribbons: Int

  """Discord tag, e.g., doraemon#4200"""
  tag: String
}

type User {
  """The user's Discord ID."""
  id: String!
  ribbons: Int

  """Discord tag, e.g., doraemon#4200"""
  tag: String!
}
